service: kairo-lite-api-productos-precios
frameworkVersion: '3'

plugins:
  - serverless-offline
custom:
  config: ../../envs/credentials.${self:provider.stage}.json

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'prod'}
  region: ${opt:region, 'us-east-1'}
  environment:
    STAGE: ${file(${self:custom.config}):stage}
    FILE_ENVIRONMENT: ${file(${self:custom.config}):fileEnvironment}
    RUN_LIKE: ${file(${self:custom.config}):run_like}
    DATABASE_HOST: ${file(${self:custom.config}):dbHost}
    DATABASE_USER: ${file(${self:custom.config}):dbUser}
    DATABASE_NAME: ${file(${self:custom.config}):dbName}
    DATABASE_PASSWORD: ${file(${self:custom.config}):dbPassword}
    AWS_POOL_ID: ${file(${self:custom.config}):awsPoolId}

package:
  include:
    - ../libs/**
    - ../common/**
  exclude:
    - node_modules/**

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: productos-precios
          method: post
          cors: true
    layers:
      - arn:${file(${self:custom.config}):layer}

  read:
    handler: handler.read
    events:
      - http:
          path: productos-precios
          method: get
          cors: true
    layers:
      - arn:${file(${self:custom.config}):layer}

  readByProducto:
    handler: handler.readByProducto
    events:
      - http:
          path: productos-precios/producto/{producto_id}
          method: get
          cors: true
    layers:
      - arn:${file(${self:custom.config}):layer}

  update:
    handler: handler.update
    events:
      - http:
          path: productos-precios
          method: put
          cors: true
    layers:
      - arn:${file(${self:custom.config}):layer}

  delete:
    handler: handler.delete
    events:
      - http:
          path: productos-precios
          method: delete
          cors: true
    layers:
      - arn:${file(${self:custom.config}):layer}
